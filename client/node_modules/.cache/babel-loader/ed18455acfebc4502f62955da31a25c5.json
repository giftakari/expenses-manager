{"ast":null,"code":"var _jsxFileName = \"/Users/emmanuel/Desktop/Development/expenses-manager/client/src/Components/CreateExpenses/index.js\";\nimport React, { Component } from 'react';\n\nclass CreateExpenses extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      description: this.props.expense ? this.props.expense.description : \"arrrr\",\n      amount: this.props.expense ? this.props.expense.amount : \"\",\n      //For the amount, the value found is a number and the form requires a string\n      notes: this.props.expense ? (this.props.expense.amount / 100).toString() : \"\",\n      //We will create an instance of moment to get a date at that specific point in time but not the time the code runs which is moment() therefore will pass our timestamp in\n      createdAt: this.props.expense ? moment(this.props.createdAt) : moment(),\n      calendarFocused: false,\n      error: \"\"\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Create Expenses\"), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Description\",\n      autoFocus: true,\n      value: description,\n      name: \"description\",\n      onChange: this.onChangeInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      placeholder: \"amount\",\n      value: amount,\n      name: \"amount\",\n      onChange: this.onAmountChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(SingleDatePicker, {\n      date: this.state.createdAt //The current date when the app runs, we will use moment = The date to start\n      ,\n      onDateChange: this.onDateChange,\n      focused: this.state.calendarFocused,\n      onFocusChange: this.onFocusChange,\n      numberOfMonths: 1 //select only one thus only one calendar\n      ,\n      isOutsideRange: () => false //This allows us to view all past date and current or future\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      placeholder: \"Add notes (optional)\",\n      value: notes,\n      name: \"notes\",\n      onChange: this.onChangeInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.onFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nexport default CreateExpenses;","map":{"version":3,"sources":["/Users/emmanuel/Desktop/Development/expenses-manager/client/src/Components/CreateExpenses/index.js"],"names":["React","Component","CreateExpenses","state","description","props","expense","amount","notes","toString","createdAt","moment","calendarFocused","error","render","onChangeInput","onAmountChange","onDateChange","onFocusChange","onFormSubmit"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,cAAN,SAA6BD,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAEnCE,KAFmC,GAE3B;AACJC,MAAAA,WAAW,EAAE,KAAKC,KAAL,CAAWC,OAAX,GAAqB,KAAKD,KAAL,CAAWC,OAAX,CAAmBF,WAAxC,GAAsD,OAD/D;AAEJG,MAAAA,MAAM,EAAE,KAAKF,KAAL,CAAWC,OAAX,GAAqB,KAAKD,KAAL,CAAWC,OAAX,CAAmBC,MAAxC,GAAiD,EAFrD;AAGJ;AACAC,MAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,OAAX,GACH,CAAC,KAAKD,KAAL,CAAWC,OAAX,CAAmBC,MAAnB,GAA4B,GAA7B,EAAkCE,QAAlC,EADG,GAEH,EANA;AAQJ;AAEAC,MAAAA,SAAS,EAAE,KAAKL,KAAL,CAAWC,OAAX,GAAqBK,MAAM,CAAC,KAAKN,KAAL,CAAWK,SAAZ,CAA3B,GAAoDC,MAAM,EAVjE;AAWJC,MAAAA,eAAe,EAAE,KAXb;AAYJC,MAAAA,KAAK,EAAE;AAZH,KAF2B;AAAA;;AAiBnCC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,WAAW,EAAC,aAFhB;AAGI,MAAA,SAAS,MAHb;AAII,MAAA,KAAK,EAAEV,WAJX;AAKI,MAAA,IAAI,EAAC,aALT;AAMI,MAAA,QAAQ,EAAE,KAAKW,aANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAUI;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,WAAW,EAAC,QAFhB;AAGI,MAAA,KAAK,EAAER,MAHX;AAII,MAAA,IAAI,EAAC,QAJT;AAKI,MAAA,QAAQ,EAAE,KAAKS,cALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,EAkBI,oBAAC,gBAAD;AACI,MAAA,IAAI,EAAE,KAAKb,KAAL,CAAWO,SADrB,CACgC;AADhC;AAEI,MAAA,YAAY,EAAE,KAAKO,YAFvB;AAGI,MAAA,OAAO,EAAE,KAAKd,KAAL,CAAWS,eAHxB;AAII,MAAA,aAAa,EAAE,KAAKM,aAJxB;AAKI,MAAA,cAAc,EAAE,CALpB,CAKuB;AALvB;AAMI,MAAA,cAAc,EAAE,MAAM,KAN1B,CAMiC;AANjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBJ,EA2BI;AACI,MAAA,WAAW,EAAC,sBADhB;AAEI,MAAA,KAAK,EAAEV,KAFX;AAGI,MAAA,IAAI,EAAC,OAHT;AAII,MAAA,QAAQ,EAAE,KAAKO,aAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3BJ,EAkCI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,KAAKI,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlCJ,CAFJ,CADJ;AA2CH;;AA7DkC;;AAgEvC,eAAejB,cAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass CreateExpenses extends Component {\n\n    state = {\n        description: this.props.expense ? this.props.expense.description : \"arrrr\",\n        amount: this.props.expense ? this.props.expense.amount : \"\",\n        //For the amount, the value found is a number and the form requires a string\n        notes: this.props.expense\n          ? (this.props.expense.amount / 100).toString()\n          : \"\",\n    \n        //We will create an instance of moment to get a date at that specific point in time but not the time the code runs which is moment() therefore will pass our timestamp in\n    \n        createdAt: this.props.expense ? moment(this.props.createdAt) : moment(),\n        calendarFocused: false,\n        error: \"\"\n      };\n    \n    render() {\n        return (\n            <div>\n                <h1>Create Expenses</h1>\n                <form>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Description\"\n                        autoFocus\n                        value={description}\n                        name=\"description\"\n                        onChange={this.onChangeInput}\n                    />\n\n                    <input\n                        type=\"number\"\n                        placeholder=\"amount\"\n                        value={amount}\n                        name=\"amount\"\n                        onChange={this.onAmountChange}\n                    />\n\n                    <SingleDatePicker\n                        date={this.state.createdAt} //The current date when the app runs, we will use moment = The date to start\n                        onDateChange={this.onDateChange}\n                        focused={this.state.calendarFocused}\n                        onFocusChange={this.onFocusChange}\n                        numberOfMonths={1} //select only one thus only one calendar\n                        isOutsideRange={() => false} //This allows us to view all past date and current or future\n                    />\n\n                    <textarea\n                        placeholder=\"Add notes (optional)\"\n                        value={notes}\n                        name=\"notes\"\n                        onChange={this.onChangeInput}\n                    ></textarea>\n\n                    <button type=\"submit\" onClick={this.onFormSubmit}>\n                        Submit\n          </button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default CreateExpenses;"]},"metadata":{},"sourceType":"module"}