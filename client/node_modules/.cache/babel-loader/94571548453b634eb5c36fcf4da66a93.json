{"ast":null,"code":"var _jsxFileName = \"/Users/emmanuel/Desktop/Development/Projects/expenses-manager/client/src/Components/EditExpenses/index.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ExpenseForm from \"../ExpensesForm\";\nimport { editExpense, removeExpense } from \"../../redux/actions/expenses-actions\";\nimport store from \"../../redux/store\";\n\nclass EditExpenses extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      onClick: this.searchId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"Edit Expenses\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"Your are editinting \", this.props.match.params.id), React.createElement(ExpenseForm, {\n      expense: this.props.expense,\n      onSubmit: expense => {\n        //Dispatch the addExpense Action\n        //Remember that this takes id and the object\n        store.dispatch(editExpense(this.props.expense.id, expense)); //Redirect\n\n        this.props.history.push(\"/dashboard\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => {\n        store.dispatch(removeExpense({\n          id: this.props.expense.id\n        }));\n        this.props.history.push(\"/\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Remove\"));\n  }\n\n} //HOC\n//For HOC, we also have access to props as a second argument\n\n\nconst mapStateToprops = (state, props) => {\n  return {\n    //We have to connect to the store and get access to the data and then we search through the array to find the expenses who's id is in the url\n    //Finding data by id in mogoose we will use findById\n    //Now the object expense contains only one item whose id is been found therefore will put this into the form values of the edit form\n    expense: state.expenses.find(expense => {\n      return expense.id === props.match.params.id;\n    })\n  };\n};\n\nexport default connect(mapStateToprops, {\n  editExpense\n})(EditExpenses);","map":{"version":3,"sources":["/Users/emmanuel/Desktop/Development/Projects/expenses-manager/client/src/Components/EditExpenses/index.js"],"names":["React","Component","connect","ExpenseForm","editExpense","removeExpense","store","EditExpenses","render","searchId","props","match","params","id","expense","dispatch","history","push","mapStateToprops","state","expenses","find"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,SACEC,WADF,EAEEC,aAFF,QAGO,sCAHP;AAIA,OAAOC,KAAP,MAAkB,mBAAlB;;AAEA,MAAMC,YAAN,SAA2BN,SAA3B,CAAqC;AACnCO,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,OAAO,EAAE,KAAKC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAyB,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAjD,CAFF,EAKE,oBAAC,WAAD;AACE,MAAA,OAAO,EAAE,KAAKH,KAAL,CAAWI,OADtB;AAEE,MAAA,QAAQ,EAAEA,OAAO,IAAI;AACnB;AACA;AACAR,QAAAA,KAAK,CAACS,QAAN,CAAeX,WAAW,CAAC,KAAKM,KAAL,CAAWI,OAAX,CAAmBD,EAApB,EAAwBC,OAAxB,CAA1B,EAHmB,CAInB;;AACA,aAAKJ,KAAL,CAAWM,OAAX,CAAmBC,IAAnB,CAAwB,YAAxB;AACD,OARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAgBE;AACE,MAAA,OAAO,EAAE,MAAM;AACbX,QAAAA,KAAK,CAACS,QAAN,CAAeV,aAAa,CAAC;AAAEQ,UAAAA,EAAE,EAAE,KAAKH,KAAL,CAAWI,OAAX,CAAmBD;AAAzB,SAAD,CAA5B;AACA,aAAKH,KAAL,CAAWM,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF,CADF;AA2BD;;AA7BkC,C,CAgCrC;AAEA;;;AACA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQT,KAAR,KAAkB;AACxC,SAAO;AACL;AAEA;AAEA;AACAI,IAAAA,OAAO,EAAEK,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBP,OAAO,IAAI;AACtC,aAAOA,OAAO,CAACD,EAAR,KAAeH,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,EAAzC;AACD,KAFQ;AANJ,GAAP;AAUD,CAXD;;AAYA,eAAeX,OAAO,CACpBgB,eADoB,EAEpB;AAAEd,EAAAA;AAAF,CAFoB,CAAP,CAGbG,YAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ExpenseForm from \"../ExpensesForm\";\nimport {\n  editExpense,\n  removeExpense\n} from \"../../redux/actions/expenses-actions\";\nimport store from \"../../redux/store\";\n\nclass EditExpenses extends Component {\n  render() {\n    return (\n      <div>\n        <h1 onClick={this.searchId}>Edit Expenses</h1>\n        <h2>Your are editinting {this.props.match.params.id}</h2>\n\n        {/* Remember that the expense form takes submit function and other props so will pass the expense data whose id is been found to it */}\n        <ExpenseForm\n          expense={this.props.expense}\n          onSubmit={expense => {\n            //Dispatch the addExpense Action\n            //Remember that this takes id and the object\n            store.dispatch(editExpense(this.props.expense.id, expense));\n            //Redirect\n            this.props.history.push(\"/dashboard\");\n          }}\n        />\n\n        <button\n          onClick={() => {\n            store.dispatch(removeExpense({ id: this.props.expense.id }));\n            this.props.history.push(\"/\");\n          }}\n        >\n          Remove\n        </button>\n      </div>\n    );\n  }\n}\n\n//HOC\n\n//For HOC, we also have access to props as a second argument\nconst mapStateToprops = (state, props) => {\n  return {\n    //We have to connect to the store and get access to the data and then we search through the array to find the expenses who's id is in the url\n\n    //Finding data by id in mogoose we will use findById\n\n    //Now the object expense contains only one item whose id is been found therefore will put this into the form values of the edit form\n    expense: state.expenses.find(expense => {\n      return expense.id === props.match.params.id;\n    })\n  };\n};\nexport default connect(\n  mapStateToprops,\n  { editExpense }\n)(EditExpenses);\n"]},"metadata":{},"sourceType":"module"}