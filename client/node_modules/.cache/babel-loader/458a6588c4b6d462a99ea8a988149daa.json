{"ast":null,"code":"var _jsxFileName = \"/Users/emmanuel/Desktop/Development/expenses-manager/client/src/Components/CreateExpenses/index.js\";\nimport React, { Component } from 'react';\nimport { addExpense, fetchExpenses } from '../../redux/actions/expenses-actions';\nimport store from '../../redux/store';\nimport { connect } from 'react-redux';\n\nclass CreateExpenses extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      description: 'rtyty',\n      amount: '',\n      notes: ''\n    };\n\n    this.onChangeInput = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onAmountChange = e => {\n      const amount = e.target.value;\n\n      if (amount.match(/^\\d*(\\.\\d{0,2})?$/)) {\n        this.setState(() => ({\n          amount\n        }));\n      }\n    };\n\n    this.onFormSubmit = e => {\n      e.preventDefault();\n      store.dispatch(addExpense(this.state));\n      store.dispatch(fetchExpenses());\n    };\n  }\n\n  componentDidMount() {\n    store.dispatch(fetchExpenses());\n  }\n\n  render() {\n    console.log('From store', store.getState());\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Create Expenses\"), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Description\",\n      autoFocus: true,\n      value: this.state.description,\n      name: \"description\",\n      onChange: this.onChangeInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      placeholder: \"amount\",\n      value: this.amount,\n      name: \"amount\",\n      onChange: this.onAmountChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      placeholder: \"Add notes (optional)\",\n      value: this.notes,\n      name: \"notes\",\n      onChange: this.onChangeInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.onFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nconst mapStateToprops = state => {\n  return {\n    expensesFromCreateExpComponent: state\n  };\n};\n\nexport default connect(mapStateToprops, {})(CreateExpenses);","map":{"version":3,"sources":["/Users/emmanuel/Desktop/Development/expenses-manager/client/src/Components/CreateExpenses/index.js"],"names":["React","Component","addExpense","fetchExpenses","store","connect","CreateExpenses","state","description","amount","notes","onChangeInput","e","setState","target","name","value","onAmountChange","match","onFormSubmit","preventDefault","dispatch","componentDidMount","render","console","log","getState","mapStateToprops","expensesFromCreateExpComponent"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,sCAA1C;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AACA,MAAMC,cAAN,SAA6BL,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAGnCM,KAHmC,GAG3B;AACJC,MAAAA,WAAW,EAAE,OADT;AAEJC,MAAAA,MAAM,EAAE,EAFJ;AAGJC,MAAAA,KAAK,EAAE;AAHH,KAH2B;;AAAA,SAWnCC,aAXmC,GAWnBC,CAAC,IAAI;AACjB,WAAKC,QAAL,CAAc;AACV,SAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AADhB,OAAd;AAGH,KAfkC;;AAAA,SAoBnCC,cApBmC,GAoBlBL,CAAC,IAAI;AAClB,YAAMH,MAAM,GAAGG,CAAC,CAACE,MAAF,CAASE,KAAxB;;AAEA,UAAIP,MAAM,CAACS,KAAP,CAAa,mBAAb,CAAJ,EAAuC;AACnC,aAAKL,QAAL,CAAc,OAAO;AAAEJ,UAAAA;AAAF,SAAP,CAAd;AACH;AACJ,KA1BkC;;AAAA,SA8BnCU,YA9BmC,GA8BpBP,CAAC,IAAI;AAChBA,MAAAA,CAAC,CAACQ,cAAF;AACAhB,MAAAA,KAAK,CAACiB,QAAN,CAAenB,UAAU,CAAC,KAAKK,KAAN,CAAzB;AACAH,MAAAA,KAAK,CAACiB,QAAN,CAAelB,aAAa,EAA5B;AAEH,KAnCkC;AAAA;;AAsCnCmB,EAAAA,iBAAiB,GAAG;AAChBlB,IAAAA,KAAK,CAACiB,QAAN,CAAelB,aAAa,EAA5B;AACH;;AAEDoB,EAAAA,MAAM,GAAG;AAELC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BrB,KAAK,CAACsB,QAAN,EAA1B;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,WAAW,EAAC,aAFhB;AAGI,MAAA,SAAS,MAHb;AAII,MAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWC,WAJtB;AAKI,MAAA,IAAI,EAAC,aALT;AAMI,MAAA,QAAQ,EAAE,KAAKG,aANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAUI;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,WAAW,EAAC,QAFhB;AAGI,MAAA,KAAK,EAAE,KAAKF,MAHhB;AAII,MAAA,IAAI,EAAC,QAJT;AAKI,MAAA,QAAQ,EAAE,KAAKQ,cALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,EAmBI;AACI,MAAA,WAAW,EAAC,sBADhB;AAEI,MAAA,KAAK,EAAE,KAAKP,KAFhB;AAGI,MAAA,IAAI,EAAC,OAHT;AAII,MAAA,QAAQ,EAAE,KAAKC,aAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBJ,EA0BI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,KAAKQ,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1BJ,CAFJ,CADJ;AAmCH;;AAhFkC;;AAmFvC,MAAMQ,eAAe,GAAIpB,KAAD,IAAW;AAC/B,SAAO;AACHqB,IAAAA,8BAA8B,EAAErB;AAD7B,GAAP;AAGH,CAJD;;AAMA,eAAeF,OAAO,CAACsB,eAAD,EAAkB,EAAlB,CAAP,CAA6BrB,cAA7B,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { addExpense, fetchExpenses } from '../../redux/actions/expenses-actions';\nimport store from '../../redux/store'\nimport { connect } from 'react-redux';\nclass CreateExpenses extends Component {\n\n\n    state = {\n        description: 'rtyty',\n        amount: '',\n        notes: '',\n\n    };\n\n    //changeinput\n    onChangeInput = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    };\n\n    //OnAmountChange\n\n    //We want to allow users to type in only numbers with decimal value so we will use a regression to achieve that\n    onAmountChange = e => {\n        const amount = e.target.value;\n\n        if (amount.match(/^\\d*(\\.\\d{0,2})?$/)) {\n            this.setState(() => ({ amount }));\n        }\n    };\n\n    //form submit\n\n    onFormSubmit = e => {\n        e.preventDefault();\n        store.dispatch(addExpense(this.state));\n        store.dispatch(fetchExpenses())\n\n    };\n\n\n    componentDidMount() {\n        store.dispatch(fetchExpenses())\n    }\n\n    render() {\n\n        console.log('From store', store.getState())\n        return (\n            <div>\n                <h1>Create Expenses</h1>\n                <form>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Description\"\n                        autoFocus\n                        value={this.state.description}\n                        name=\"description\"\n                        onChange={this.onChangeInput}\n                    />\n\n                    <input\n                        type=\"number\"\n                        placeholder=\"amount\"\n                        value={this.amount}\n                        name=\"amount\"\n                        onChange={this.onAmountChange}\n                    />\n\n\n                    <textarea\n                        placeholder=\"Add notes (optional)\"\n                        value={this.notes}\n                        name=\"notes\"\n                        onChange={this.onChangeInput}\n                    ></textarea>\n\n                    <button type=\"submit\" onClick={this.onFormSubmit}>\n                        Submit\n          </button>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToprops = (state) => {\n    return {\n        expensesFromCreateExpComponent: state\n    }\n}\n\nexport default connect(mapStateToprops, {})(CreateExpenses);"]},"metadata":{},"sourceType":"module"}