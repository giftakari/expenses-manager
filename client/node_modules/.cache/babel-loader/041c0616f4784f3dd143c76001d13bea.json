{"ast":null,"code":"import _defineProperty from \"/Users/emmanuel/Desktop/Development/expenses-manager/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//Expenses Reducers\nconst expensesDefaultState = {\n  expenses: []\n};\n\nconst expenseReducer = (state = expensesDefaultState, action) => {\n  switch (action.type) {\n    case \"ADD_EXPENSE\":\n      return _objectSpread({}, state, {\n        expenses: [action.payload, ...state.expenses] //NOTE: If the property is the same as the one in the defaultState, it will override otherwise it will add a new property to this array\n\n      });\n\n    case \"FETCH\":\n      return _objectSpread({}, state, {\n        expenses: action.payload\n      });\n\n    case \"EDIT_EXPENSE\":\n      return state.map(expense => {\n        if (expense.id === action.id) {\n          return _objectSpread({}, expense, {}, action.updates);\n        } else {\n          return expense;\n        }\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default expenseReducer;","map":{"version":3,"sources":["/Users/emmanuel/Desktop/Development/expenses-manager/client/src/redux/reducers/expenses-reducers.js"],"names":["expensesDefaultState","expenses","expenseReducer","state","action","type","payload","map","expense","id","updates"],"mappings":";;;;;;AAAA;AAEA,MAAMA,oBAAoB,GAAG;AAC3BC,EAAAA,QAAQ,EAAE;AADiB,CAA7B;;AAIA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGH,oBAAT,EAA+BI,MAA/B,KAA0C;AAC/D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,+BACKF,KADL;AAEEF,QAAAA,QAAQ,EAAE,CAACG,MAAM,CAACE,OAAR,EAAiB,GAAGH,KAAK,CAACF,QAA1B,CAFZ,CAGE;;AAHF;;AAMF,SAAK,OAAL;AACE,+BACKE,KADL;AAEEF,QAAAA,QAAQ,EAAEG,MAAM,CAACE;AAFnB;;AAKF,SAAK,cAAL;AACE,aAAOH,KAAK,CAACI,GAAN,CAAUC,OAAO,IAAI;AAC1B,YAAIA,OAAO,CAACC,EAAR,KAAeL,MAAM,CAACK,EAA1B,EAA8B;AAC5B,mCACKD,OADL,MAEKJ,MAAM,CAACM,OAFZ;AAID,SALD,MAKO;AACL,iBAAOF,OAAP;AACD;AACF,OATM,CAAP;;AAWF;AACE,aAAOL,KAAP;AA3BJ;AA6BD,CA9BD;;AAgCA,eAAeD,cAAf","sourcesContent":["//Expenses Reducers\n\nconst expensesDefaultState = {\n  expenses: []\n};\n\nconst expenseReducer = (state = expensesDefaultState, action) => {\n  switch (action.type) {\n    case \"ADD_EXPENSE\":\n      return {\n        ...state,\n        expenses: [action.payload, ...state.expenses]\n        //NOTE: If the property is the same as the one in the defaultState, it will override otherwise it will add a new property to this array\n      };\n\n    case \"FETCH\":\n      return {\n        ...state,\n        expenses: action.payload\n      };\n\n    case \"EDIT_EXPENSE\":\n      return state.map(expense => {\n        if (expense.id === action.id) {\n          return {\n            ...expense,\n            ...action.updates\n          };\n        } else {\n          return expense;\n        }\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default expenseReducer;\n"]},"metadata":{},"sourceType":"module"}