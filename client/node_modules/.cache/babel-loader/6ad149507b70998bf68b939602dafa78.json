{"ast":null,"code":"var _jsxFileName = \"/Users/emmanuel/Desktop/Development/expenses-manager/client/src/Components/CreateExpenses/index.js\";\nimport React, { Component } from 'react';\n\nclass CreateExpenses extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      description: 'rtyty',\n      amount: '',\n      notes: ''\n    };\n\n    this.onChangeInput = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onFormSubmit = e => {\n      e.preventDefault();\n\n      if (!this.state.description || !this.state.amount) {\n        //set error\n        this.setState({\n          error: \"Please provide amount\"\n        });\n        console.log(\"ERROR\");\n      } else {\n        this.props.onSubmit(this.state);\n        console.log(this.state); // this.props.onSubmit({\n        //   //Remember that this action creater receives object as argument\n        //   //We have to convert the values coming from the form to proper format for example the createdAt field this contains a whole bunch of methods and properties so we will use moment.valueOf() to get the actual date in a number format\n        //   description: this.state.description,\n        //   amount: parseFloat(this.state.amount, 10) * 100,\n        //   createdAt: this.state.createdAt.valueOf(), //this is from moment for us to get the value as a number\n        //   notes: this.state.notes\n        // });\n        //clear error\n\n        this.setState({\n          error: \"\"\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Create Expenses\"), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Description\",\n      autoFocus: true,\n      value: this.state.description,\n      name: \"description\",\n      onChange: this.onChangeInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      placeholder: \"amount\",\n      value: this.amount,\n      name: \"amount\",\n      onChange: this.onAmountChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      placeholder: \"Add notes (optional)\",\n      value: this.notes,\n      name: \"notes\",\n      onChange: this.onChangeInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.onFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nexport default CreateExpenses;","map":{"version":3,"sources":["/Users/emmanuel/Desktop/Development/expenses-manager/client/src/Components/CreateExpenses/index.js"],"names":["React","Component","CreateExpenses","state","description","amount","notes","onChangeInput","e","setState","target","name","value","onFormSubmit","preventDefault","error","console","log","props","onSubmit","render","onAmountChange"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,cAAN,SAA6BD,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAEnCE,KAFmC,GAE3B;AACJC,MAAAA,WAAW,EAAE,OADT;AAEJC,MAAAA,MAAM,EAAE,EAFJ;AAGJC,MAAAA,KAAK,EAAE;AAHH,KAF2B;;AAAA,SAUnCC,aAVmC,GAUnBC,CAAC,IAAI;AACjB,WAAKC,QAAL,CAAc;AACV,SAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AADhB,OAAd;AAGH,KAdkC;;AAAA,SAoBnCC,YApBmC,GAoBpBL,CAAC,IAAI;AAChBA,MAAAA,CAAC,CAACM,cAAF;;AAEA,UAAI,CAAC,KAAKX,KAAL,CAAWC,WAAZ,IAA2B,CAAC,KAAKD,KAAL,CAAWE,MAA3C,EAAmD;AAC/C;AACA,aAAKI,QAAL,CAAc;AACVM,UAAAA,KAAK,EAAE;AADG,SAAd;AAGAC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH,OAND,MAMO;AACH,aAAKC,KAAL,CAAWC,QAAX,CAAoB,KAAKhB,KAAzB;AACAa,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAjB,EAFG,CAGH;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;;AACA,aAAKM,QAAL,CAAc;AACVM,UAAAA,KAAK,EAAE;AADG,SAAd;AAGH;AACJ,KAhDkC;AAAA;;AAkDnCK,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,WAAW,EAAC,aAFhB;AAGI,MAAA,SAAS,MAHb;AAII,MAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWC,WAJtB;AAKI,MAAA,IAAI,EAAC,aALT;AAMI,MAAA,QAAQ,EAAE,KAAKG,aANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAUI;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,WAAW,EAAC,QAFhB;AAGI,MAAA,KAAK,EAAE,KAAKF,MAHhB;AAII,MAAA,IAAI,EAAC,QAJT;AAKI,MAAA,QAAQ,EAAE,KAAKgB,cALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,EAmBI;AACI,MAAA,WAAW,EAAC,sBADhB;AAEI,MAAA,KAAK,EAAE,KAAKf,KAFhB;AAGI,MAAA,IAAI,EAAC,OAHT;AAII,MAAA,QAAQ,EAAE,KAAKC,aAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBJ,EA0BI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,KAAKM,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1BJ,CAFJ,CADJ;AAmCH;;AAtFkC;;AAyFvC,eAAeX,cAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass CreateExpenses extends Component {\n\n    state = {\n        description: 'rtyty',\n        amount: '',\n        notes: '',\n\n    };\n\n    //changeinput\n    onChangeInput = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    };\n\n\n\n    //form submit\n\n    onFormSubmit = e => {\n        e.preventDefault();\n\n        if (!this.state.description || !this.state.amount) {\n            //set error\n            this.setState({\n                error: \"Please provide amount\"\n            });\n            console.log(\"ERROR\");\n        } else {\n            this.props.onSubmit(this.state);\n            console.log(this.state);\n            // this.props.onSubmit({\n            //   //Remember that this action creater receives object as argument\n\n            //   //We have to convert the values coming from the form to proper format for example the createdAt field this contains a whole bunch of methods and properties so we will use moment.valueOf() to get the actual date in a number format\n\n            //   description: this.state.description,\n            //   amount: parseFloat(this.state.amount, 10) * 100,\n            //   createdAt: this.state.createdAt.valueOf(), //this is from moment for us to get the value as a number\n            //   notes: this.state.notes\n            // });\n\n            //clear error\n            this.setState({\n                error: \"\"\n            });\n        }\n    };\n\n    render() {\n        return (\n            <div>\n                <h1>Create Expenses</h1>\n                <form>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Description\"\n                        autoFocus\n                        value={this.state.description}\n                        name=\"description\"\n                        onChange={this.onChangeInput}\n                    />\n\n                    <input\n                        type=\"number\"\n                        placeholder=\"amount\"\n                        value={this.amount}\n                        name=\"amount\"\n                        onChange={this.onAmountChange}\n                    />\n\n\n                    <textarea\n                        placeholder=\"Add notes (optional)\"\n                        value={this.notes}\n                        name=\"notes\"\n                        onChange={this.onChangeInput}\n                    ></textarea>\n\n                    <button type=\"submit\" onClick={this.onFormSubmit}>\n                        Submit\n          </button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default CreateExpenses;"]},"metadata":{},"sourceType":"module"}