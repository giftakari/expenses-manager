{"ast":null,"code":"var _jsxFileName = \"/Users/emmanuel/Desktop/Development/Projects/expenses-manager/client/src/Components/ExpenseListFilters/index.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { DateRangePicker } from \"react-dates\";\nimport { setTextFilter, sortByAmount, sortByDate, setStartDate, setEndDate } from \"../../redux/actions/filters-actions\";\nimport store from \"../../redux/store\";\n\nclass ExpenseListFilters extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      calendarFocused: null\n    };\n\n    this.onInputChane = e => {\n      e.preventDefault();\n      store.dispatch(setTextFilter(e.target.value));\n    };\n\n    this.onSelectChange = e => {\n      //console.log(e.target.value)\n      if (e.target.value === \"date\") {\n        store.dispatch(sortByDate());\n      } else {\n        store.dispatch(sortByAmount());\n      }\n    };\n\n    this.onDateChange = ({\n      startDate,\n      endDate\n    }) => {\n      //Dispatch the actions\n      //When we connect our react to redux we have access to this.props.dispatch to dispatch actions to the store\n      this.props.dispatch(setStartDate(startDate)); //We pass in the new start date that's passed into our onDateChange\n\n      this.props.dispatch(setEndDate(endDate));\n    };\n\n    this.onFocusChange = calendarFocused => {\n      this.setState({\n        calendarFocused: calendarFocused //Setting it into the new value\n\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: this.props.filters.text,\n      onChange: this.onInputChane,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      value: this.props.filters.sortBy,\n      onChange: this.onSelectChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Date\"), React.createElement(\"option\", {\n      value: \"amount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Amount\")), React.createElement(DateRangePicker, {\n      startDate: this.props.filters.startDate //Instance of moment\n      ,\n      endDate: this.props.filters.endDate //Instance of moment\n      ,\n      onDatesChange: this.onDateChange,\n      focusedInput: this.state.calendarFocused,\n      onFocusChange: this.onFocusChange //This get's the focused value and set it\n      ,\n      numberOfMonths: 1 //Only one month is visible\n      ,\n      isOutsideRange: () => false //Able to view past date\n      // showClearDates={true} //Button to clear date\n      ,\n      startDateId: \"dwr3r34343430420423o30930\" //Any string id\n      ,\n      endDateId: \"uhdushd2374i3ej3ie323233\" //Any string id\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }));\n  }\n\n} //When we connect our react to redux we have access to this.props.dispatch to dispatch actions to the store\n\n\nconst mapStateToProps = state => {\n  return {\n    filters: state.filters\n  };\n};\n\nexport default connect(mapStateToProps)(ExpenseListFilters);","map":{"version":3,"sources":["/Users/emmanuel/Desktop/Development/Projects/expenses-manager/client/src/Components/ExpenseListFilters/index.js"],"names":["React","Component","connect","DateRangePicker","setTextFilter","sortByAmount","sortByDate","setStartDate","setEndDate","store","ExpenseListFilters","state","calendarFocused","onInputChane","e","preventDefault","dispatch","target","value","onSelectChange","onDateChange","startDate","endDate","props","onFocusChange","setState","render","filters","text","sortBy","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { DateRangePicker } from \"react-dates\";\nimport {\n  setTextFilter,\n  sortByAmount,\n  sortByDate,\n  setStartDate,\n  setEndDate\n} from \"../../redux/actions/filters-actions\";\nimport store from \"../../redux/store\";\n\nclass ExpenseListFilters extends Component {\n  //This state is used customised react-date\n  state = {\n    calendarFocused: null\n  };\n\n  //OnIput Change\n  onInputChane = e => {\n    e.preventDefault();\n    store.dispatch(setTextFilter(e.target.value));\n  };\n\n  //onSelectChange method\n  //========================\n  onSelectChange = e => {\n    //console.log(e.target.value)\n\n    if (e.target.value === \"date\") {\n      store.dispatch(sortByDate());\n    } else {\n      store.dispatch(sortByAmount());\n    }\n  };\n\n  //OnDateChange\n  //===============\n\n  //This will call by reat date automatically  and it requires object which contains startDate and endDate from moment therefore we will destructure it\n\n  onDateChange = ({ startDate, endDate }) => {\n    //Dispatch the actions\n\n    //When we connect our react to redux we have access to this.props.dispatch to dispatch actions to the store\n\n    this.props.dispatch(setStartDate(startDate)); //We pass in the new start date that's passed into our onDateChange\n\n    this.props.dispatch(setEndDate(endDate));\n  };\n\n  //OnFocusedChange\n  //=============================\n  //This get's the focuse\n  onFocusChange = calendarFocused => {\n    this.setState({\n      calendarFocused: calendarFocused //Setting it into the new value\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <input\n          type=\"text\"\n          value={this.props.filters.text}\n          onChange={this.onInputChane}\n        />\n\n        <select\n          value={this.props.filters.sortBy}\n          onChange={this.onSelectChange}\n        >\n          <option value=\"date\">Date</option>\n          <option value=\"amount\">Amount</option>\n        </select>\n\n        <DateRangePicker\n          startDate={this.props.filters.startDate} //Instance of moment\n          endDate={this.props.filters.endDate} //Instance of moment\n          onDatesChange={this.onDateChange}\n          focusedInput={this.state.calendarFocused}\n          onFocusChange={this.onFocusChange} //This get's the focused value and set it\n          numberOfMonths={1} //Only one month is visible\n          isOutsideRange={() => false} //Able to view past date\n          // showClearDates={true} //Button to clear date\n          startDateId={\"dwr3r34343430420423o30930\"} //Any string id\n          endDateId={\"uhdushd2374i3ej3ie323233\"} //Any string id\n        />\n      </div>\n    );\n  }\n}\n\n//When we connect our react to redux we have access to this.props.dispatch to dispatch actions to the store\nconst mapStateToProps = state => {\n  return {\n    filters: state.filters\n  };\n};\n\nexport default connect(mapStateToProps)(ExpenseListFilters);\n"]},"metadata":{},"sourceType":"module"}