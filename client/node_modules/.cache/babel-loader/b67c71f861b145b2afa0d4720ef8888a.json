{"ast":null,"code":"var _jsxFileName = \"/Users/emmanuel/Desktop/Development/expenses-manager/client/src/Components/CreateExpenses/index.js\";\nimport React, { Component } from 'react';\n\nclass CreateExpenses extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      description: '',\n      amount: '',\n      notes: '',\n      createdAt: ''\n    };\n\n    this.onChangeInput = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onDateChange = createdAt => {\n      this.setState({\n        createdAt: createdAt\n      });\n    };\n\n    this.onFocusChange = ({\n      focused\n    }) => {\n      this.setState({\n        calendarFocused: focused\n      });\n    };\n\n    this.onFormSubmit = e => {\n      e.preventDefault();\n\n      if (!this.state.description || !this.state.amount) {\n        //set error\n        this.setState({\n          error: \"Please provide amount\"\n        });\n        console.log(\"ERROR\");\n      } else {\n        this.props.onSubmit(this.state);\n        console.log(this.state); // this.props.onSubmit({\n        //   //Remember that this action creater receives object as argument\n        //   //We have to convert the values coming from the form to proper format for example the createdAt field this contains a whole bunch of methods and properties so we will use moment.valueOf() to get the actual date in a number format\n        //   description: this.state.description,\n        //   amount: parseFloat(this.state.amount, 10) * 100,\n        //   createdAt: this.state.createdAt.valueOf(), //this is from moment for us to get the value as a number\n        //   notes: this.state.notes\n        // });\n        //clear error\n\n        this.setState({\n          error: \"\"\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Create Expenses\"), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Description\",\n      autoFocus: true,\n      value: description,\n      name: \"description\",\n      onChange: this.onChangeInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      placeholder: \"amount\",\n      value: amount,\n      name: \"amount\",\n      onChange: this.onAmountChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      placeholder: \"Add notes (optional)\",\n      value: notes,\n      name: \"notes\",\n      onChange: this.onChangeInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.onFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nexport default CreateExpenses;","map":{"version":3,"sources":["/Users/emmanuel/Desktop/Development/expenses-manager/client/src/Components/CreateExpenses/index.js"],"names":["React","Component","CreateExpenses","state","description","amount","notes","createdAt","onChangeInput","e","setState","target","name","value","onDateChange","onFocusChange","focused","calendarFocused","onFormSubmit","preventDefault","error","console","log","props","onSubmit","render","onAmountChange"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,cAAN,SAA6BD,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAEnCE,KAFmC,GAE3B;AACJC,MAAAA,WAAW,EAAE,EADT;AAEJC,MAAAA,MAAM,EAAE,EAFJ;AAGJC,MAAAA,KAAK,EAAE,EAHH;AAIJC,MAAAA,SAAS,EAAE;AAJP,KAF2B;;AAAA,SAUnCC,aAVmC,GAUnBC,CAAC,IAAI;AACjB,WAAKC,QAAL,CAAc;AACV,SAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AADhB,OAAd;AAGH,KAdkC;;AAAA,SAuBnCC,YAvBmC,GAuBpBP,SAAS,IAAI;AACxB,WAAKG,QAAL,CAAc;AACVH,QAAAA,SAAS,EAAEA;AADD,OAAd;AAGH,KA3BkC;;AAAA,SAgCnCQ,aAhCmC,GAgCnB,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAiB;AAC7B,WAAKN,QAAL,CAAc;AACVO,QAAAA,eAAe,EAAED;AADP,OAAd;AAGH,KApCkC;;AAAA,SAwCnCE,YAxCmC,GAwCpBT,CAAC,IAAI;AAChBA,MAAAA,CAAC,CAACU,cAAF;;AAEA,UAAI,CAAC,KAAKhB,KAAL,CAAWC,WAAZ,IAA2B,CAAC,KAAKD,KAAL,CAAWE,MAA3C,EAAmD;AAC/C;AACA,aAAKK,QAAL,CAAc;AACVU,UAAAA,KAAK,EAAE;AADG,SAAd;AAGAC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH,OAND,MAMO;AACH,aAAKC,KAAL,CAAWC,QAAX,CAAoB,KAAKrB,KAAzB;AACAkB,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKnB,KAAjB,EAFG,CAGH;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;;AACA,aAAKO,QAAL,CAAc;AACVU,UAAAA,KAAK,EAAE;AADG,SAAd;AAGH;AACJ,KApEkC;AAAA;;AAsEnCK,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,WAAW,EAAC,aAFhB;AAGI,MAAA,SAAS,MAHb;AAII,MAAA,KAAK,EAAErB,WAJX;AAKI,MAAA,IAAI,EAAC,aALT;AAMI,MAAA,QAAQ,EAAE,KAAKI,aANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAUI;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,WAAW,EAAC,QAFhB;AAGI,MAAA,KAAK,EAAEH,MAHX;AAII,MAAA,IAAI,EAAC,QAJT;AAKI,MAAA,QAAQ,EAAE,KAAKqB,cALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,EAmBI;AACI,MAAA,WAAW,EAAC,sBADhB;AAEI,MAAA,KAAK,EAAEpB,KAFX;AAGI,MAAA,IAAI,EAAC,OAHT;AAII,MAAA,QAAQ,EAAE,KAAKE,aAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBJ,EA0BI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,KAAKU,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1BJ,CAFJ,CADJ;AAmCH;;AA1GkC;;AA6GvC,eAAehB,cAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass CreateExpenses extends Component {\n\n    state = {\n        description: '',\n        amount: '',\n        notes: '',\n        createdAt: ''\n    };\n\n    //changeinput\n    onChangeInput = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    };\n\n    //OndateChange\n\n    //This takes moment date as argument and in our case it's createdAt\n\n    //The datePicker allows you to choose the current and future date only\n\n    //We will pass moment date to this function and this will be done by the react library automatically. So you only update the  moment date in our sate with the moment object passed and this will once again will be passed in automatically for us. This is when a user picks a new date and will set the picked date to former state.\n    onDateChange = createdAt => {\n        this.setState({\n            createdAt: createdAt\n        });\n    };\n\n    //Destructing the object and grab only focused and set them to state and this done automatically by react date api and this is how the documentation stated\n\n    //This is where react library changes the value\n    onFocusChange = ({ focused }) => {\n        this.setState({\n            calendarFocused: focused\n        });\n    };\n\n    //form submit\n\n    onFormSubmit = e => {\n        e.preventDefault();\n\n        if (!this.state.description || !this.state.amount) {\n            //set error\n            this.setState({\n                error: \"Please provide amount\"\n            });\n            console.log(\"ERROR\");\n        } else {\n            this.props.onSubmit(this.state);\n            console.log(this.state);\n            // this.props.onSubmit({\n            //   //Remember that this action creater receives object as argument\n\n            //   //We have to convert the values coming from the form to proper format for example the createdAt field this contains a whole bunch of methods and properties so we will use moment.valueOf() to get the actual date in a number format\n\n            //   description: this.state.description,\n            //   amount: parseFloat(this.state.amount, 10) * 100,\n            //   createdAt: this.state.createdAt.valueOf(), //this is from moment for us to get the value as a number\n            //   notes: this.state.notes\n            // });\n\n            //clear error\n            this.setState({\n                error: \"\"\n            });\n        }\n    };\n\n    render() {\n        return (\n            <div>\n                <h1>Create Expenses</h1>\n                <form>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Description\"\n                        autoFocus\n                        value={description}\n                        name=\"description\"\n                        onChange={this.onChangeInput}\n                    />\n\n                    <input\n                        type=\"number\"\n                        placeholder=\"amount\"\n                        value={amount}\n                        name=\"amount\"\n                        onChange={this.onAmountChange}\n                    />\n\n\n                    <textarea\n                        placeholder=\"Add notes (optional)\"\n                        value={notes}\n                        name=\"notes\"\n                        onChange={this.onChangeInput}\n                    ></textarea>\n\n                    <button type=\"submit\" onClick={this.onFormSubmit}>\n                        Submit\n          </button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default CreateExpenses;"]},"metadata":{},"sourceType":"module"}